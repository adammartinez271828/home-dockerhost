version: '3.7'
services:

  nginx-proxy-manager:
    container_name: con_nginx-proxy-manager
    image: jc21/nginx-proxy-manager:latest
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "/bin/check-health"]
      interval: 10s
      timeout: 3s
    ports:
      - '80:80'
      - '81:81'
      - '443:443'
    volumes:
      - ./data:/data
      - ./letsencrypt:/etc/letsencrypt

  pihole2:
    container_name: con_pihole2
    image: pihole/pihole:latest
    restart: unless-stopped
    environment:
      DNSMASQ_LISTENING: 'all'
      PIHOLE_DNS_: 1.1.1.2;1.0.0.2
      TZ: 'America/New_York'
      WEBPASSWORD: '${PW_PIHOLE}'
      WEBTHEME: 'default-dark'
    # For DHCP it is recommended to remove these ports and instead add: network_mode: "host"
    ports:
      - '53:53/tcp'
      - '53:53/udp'
      # - '67:67/udp' # Only required if you are using Pi-hole as your DHCP server
      # - '80:80/tcp'
    volumes:
      - './etc-pihole:/etc/pihole'
      - './etc-dnsmasq.d:/etc/dnsmasq.d'
    # https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    cap_add:
      - NET_ADMIN  # Required if you are using Pi-hole as your DHCP server, else not needed

  dashy:
    container_name: con_dashy
    image: lissy93/dashy
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      # Specify your user ID and group ID. You can find this by running `id -u` and `id -g`
      # - UID=1000
      # - GID=1000
    healthcheck:
      test: ['CMD', 'node', '/app/services/healthcheck']
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    # ports:
      # - 4000:80
    # Pass in your config file below, by specifying the path on your host machine
    # volumes:
      # - /root/my-config.yml:/app/public/conf.yml

  db_recipes:
    container_name: con_db_recipes
    image: postgres:11-alpine
    restart: unless-stopped
    env_file:
      - ./.env
    volumes:
      - ./postgresql:/var/lib/postgresql/data

  web_recipes:
    container_name: con_web_recipes
    image: vabene1111/recipes
    restart: unless-stopped
    depends_on:
      - db_recipes
    env_file:
      - ./.env
    volumes:
      - staticfiles:/opt/recipes/staticfiles
      - nginx_config:/opt/recipes/nginx/conf.d
      - ./mediafiles:/opt/recipes/mediafiles

  nginx_recipes:
    container_name: con_nginx_recipes
    image: nginx:mainline-alpine
    restart: unless-stopped
    depends_on:
      - web_recipes
    env_file:
      - ./.env
    # ports:
      # - 80:80
    volumes:
      - nginx_config:/etc/nginx/conf.d:ro
      - staticfiles:/static:ro
      - ./mediafiles:/media:ro

volumes:
  nginx_config:
  staticfiles:

networks:
  default:
    name: network_landockernet
